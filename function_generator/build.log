Python requirements from /Users/stephendickinson/esp/esp-idf/requirements.txt are satisfied.
[  0%] Built target esp32_linker_script
[  0%] Built target _project_elf_src
[  1%] Built target partition_table
[  1%] Performing build step for 'bootloader'
[  1%] Built target __idf_app_trace
[  2%] Built target __idf_cxx
[  0%] Built target __idf_build_target
[  1%] Built target _project_elf_src
[  4%] Built target __idf_log
[  4%] Built target __idf_newlib
[  4%] Built target __idf_vfs
[ 12%] Built target __idf_xtensa
[  6%] Built target __idf_freertos
[ 50%] Built target __idf_soc
[ 53%] Built target __idf_micro-ecc
[  7%] Built target __idf_heap
[  7%] Built target __idf_log
[ 79%] Built target __idf_bootloader_support
[ 10%] Built target __idf_soc
[ 87%] Built target __idf_efuse
[ 10%] Built target __idf_esp_rom
[ 90%] Built target __idf_spi_flash
[ 93%] Built target __idf_main
[ 11%] Built target __idf_esp_common
[ 98%] Built target bootloader.elf
[ 12%] Built target __idf_xtensa
[100%] Built target gen_project_binary
[100%] Built target app
[ 15%] Built target __idf_esp32
[ 15%] No install step for 'bootloader'
[ 15%] Built target __idf_espcoredump
[ 15%] Completed 'bootloader'
[ 16%] Built target __idf_pthread
[ 17%] Built target bootloader
[ 17%] Built target __idf_esp_event
[ 18%] Built target __idf_tcpip_adapter
[ 28%] Built target __idf_lwip
[ 30%] Built target __idf_esp_eth
[ 31%] Built target __idf_esp_wifi
[ 31%] Built target __idf_smartconfig_ack
[ 32%] Built target __idf_nvs_flash
[ 34%] Built target __idf_spi_flash
[ 34%] Built target __idf_app_update
[ 35%] Built target __idf_bootloader_support
[ 36%] Built target __idf_efuse
[ 46%] Built target __idf_wpa_supplicant
[ 48%] Built target mbedtls
[ 49%] Built target mbedx509
[ 57%] Built target mbedcrypto
[ 59%] Built target __idf_driver
[ 59%] Built target __idf_esp_ringbuf
[ 59%] Built target __idf_esp_adc_cal
[ 59%] Built target __idf_protobuf-c
[ 60%] Built target __idf_json
[ 60%] Built target __idf_console
[ 61%] Built target __idf_esp_gdbstub
[ 62%] Built target __idf_expat
[ 63%] Built target __idf_wear_levelling
[ 66%] Built target __idf_nghttp
[ 67%] Built target __idf_asio
[ 70%] Built target __idf_coap
[ 70%] Built target __idf_jsmn
[ 71%] Built target __idf_sdmmc
[ 71%] Built target __idf_ulp
[ 72%] Built target __idf_openssl
[ 73%] Built target __idf_unity
[ 74%] Built target __idf_spiffs
[ 77%] Built target __idf_freemodbus
[ 78%] Built target __idf_esp_http_server
[ 79%] Built target __idf_esp-tls
[ 89%] Built target __idf_mdns
[ 92%] Built target __idf_libsodium
[ 94%] Built target __idf_fatfs
[ 95%] Built target __idf_protocomm
[ 95%] Built target __idf_tcp_transport
[ 95%] Built target __idf_esp_local_ctrl
[ 96%] Built target __idf_esp_websocket_client
[ 96%] Built target __idf_esp_http_client
[ 97%] Built target __idf_wifi_provisioning
[ 98%] Built target __idf_mqtt
[100%] Built target __idf_esp_https_ota
Scanning dependencies of target __idf_main
[100%] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/function_generator_main.c.obj
[100%] Linking CXX static library libmain.a
[100%] Built target __idf_main
[100%] Generating ld/esp32.project.ld
[100%] Built target __ldgen_output_esp32.project.ld
[100%] Built target __idf_build_target
[100%] Linking CXX executable function-generator.elf
[100%] Built target function-generator.elf
[100%] Generating binary image from built executable
esptool.py v2.7-dev
Generated /Users/stephendickinson/esp/function_generator/build/function-generator.bin
[100%] Built target gen_project_binary
[100%] Built target app
Checking Python dependencies...
Executing action: all (aliases: build)
Running make in directory /Users/stephendickinson/esp/function_generator/build
Executing "make -j 10 all"...

Project build complete. To flash, run this command:
../esp-idf/components/esptool_py/esptool/esptool.py -p (PORT) -b 460800 --after hard_reset write_flash --flash_mode dio --flash_size detect --flash_freq 40m 0x1000 build/bootloader/bootloader.bin 0x8000 build/partition_table/partition-table.bin 0x10000 build/function-generator.bin
or run 'idf.py -p (PORT) flash'
